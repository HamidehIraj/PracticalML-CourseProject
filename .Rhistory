comb <- rbind(training,testing[1,])
View(training)
comb <- rbind(training[ ,1],testing[,1])
comb <- rbind(training[1, ],testing[1, ])
class(training$X)
class(testing$X)
comb <- rbind(training[1,1:5 ],testing[1,1:5 ])
comb <- rbind(training[1,1:50 ],testing[1,1:50 ])
comb <- rbind(training[1,1:100 ],testing[1,1:100 ])
comb <- rbind(training[1,1:150 ],testing[1,1:150 ])
comb <- rbind(training[,1:150 ],testing[,1:150 ])
comb <- rbind(training[,1:160 ],testing[,1:160 ])
comb <- rbind(training[,1:155 ],testing[,1:155 ])
comb <- rbind(training[,1:157 ],testing[,1:157 ])
comb <- rbind(training[,1:158 ],testing[,1:158 ])
comb <- rbind(training[,1:159 ],testing[,1:159 ])
comb <- rbind(training[,1:160 ],testing[,1:160 ])
View(testing)
View(training)
unique(training[,160])
unique(testing[,160])
testing [,160] <- NA
comb <- rbind(training[,1:160 ],testing[,1:160 ])
View(comb)
comb.df <- as.data.frame (comb)
View(comb.df)
comb.classes      <- as.vector(sapply(comb.df,class))
comb <- rbind(training,testing)
comb <- as.data.frame(rbind(training,testing))
View(comb)
tail(comb)
head(comb)
training2 <- comb[1:19622,]
testing2  <- comb[19623:19642,]
write.csv(training,file="training2.csv")
write.csv(testing,file="testing2.csv")
str(testing2)
str(comb)
View(testing)
str(training)
str(testing)
training <- read.csv("pml-training.csv",na.strings=c("#DIV/0!",NA)  )
testing<- read.csv("pml-testing.csv")
training$problem_id <- NA
testing $classes    <- NA
training       <- training[,order(names(training))]
testing        <- testing[,order(names(training))]
comb <- as.data.frame(rbind(training,testing))
names(training)
names(training)
names(testing)
testing        <- testing[,order(names(testing))]
comb <- as.data.frame(rbind(training,testing))
names(testing)
names(training)
setdiff(names(training),names(testing))
training$problem_id <- NA
testing $classe     <- NA
training       <- training[,order(names(training))]
testing        <- testing[,order(names(testing))]
comb <- as.data.frame(rbind(training,testing))
#rattle preparation
training <- read.csv("pml-training.csv",na.strings=c("#DIV/0!",NA)  )
testing<- read.csv("pml-testing.csv")
training$problem_id <- NA
testing $classe     <- NA
training       <- training[,order(names(training))]
testing        <- testing[,order(names(testing))]
comb <- as.data.frame(rbind(training,testing))
training2 <- comb[1:19622,]
testing2  <- comb[19623:19642,]
str(testing2)
str(training2)
write.csv(training,file="training2.csv")
write.csv(testing,file="testing2.csv")
write.csv(training2,file="training2.csv")
write.csv(testing2,file="testing2.csv")
candidates32.index <- c()
for (m in (1 : ncol(training2)))   {
if (   is.factor(training2[ ,m])  & nlevels(training2[ ,m]) > 32    )
{   candidates32.index <- append(candidates32.index,m) ;
training2[ ,m]<- as.character(training2[ ,m]) }
}
candidates32.index
candidates32.index <- c()
for (m in (1 : ncol(training2)))   {
if (   is.factor(training2[ ,m])  & nlevels(training2[ ,m]) > 32    )
{   candidates32.index <- append(candidates32.index,m)
}
}
candidates32.index
training <- read.csv("pml-training.csv",na.strings=c("#DIV/0!",NA)  )
testing<- read.csv("pml-testing.csv")
training <- read.csv("pml-training.csv",na.strings=c("#DIV/0!",NA)  )
testing<- read.csv("pml-testing.csv")
training$problem_id <- NA
testing $classe     <- NA
training       <- training[,order(names(training))]
testing        <- testing[,order(names(testing))]
comb <- as.data.frame(rbind(training,testing))
training2 <- comb[1:19622,]
testing2  <- comb[19623:19642,]
write.csv(training2,file="training2.csv")
write.csv(testing2,file="testing2.csv")
candidates32.index <- c()
for (m in (1 : ncol(training2)))   {
if (   is.factor(training2[ ,m])  & nlevels(training2[ ,m]) > 32    )
{   candidates32.index <- append(candidates32.index,m)
}
}
candidates32.index
str(training2)
m=1:5
is.factor(training2[ ,m])  & nlevels(training2[ ,m]) > 32    )
(   is.factor(training2[ ,m])  & nlevels(training2[ ,m]) > 32    )
(   is.factor(training2[ ,m])  & nlevels(training2[ ,m]) > 32    )
View(testing)
setdiff (names(training),names(testing))
testing<- read.csv("pml-testing.csv")
comb <- as.data.frame(rbind(training,testing))
setdiff (names(training),names(testing))
training <- read.csv("pml-training.csv",na.strings=c("#DIV/0!",NA)  )
setdiff (names(training),names(testing))
setdiff (names(testing),names(training))
setdiff (names(training),names(testing))
setdiff (names(testing),names(training))
testing $classe     <- NA
training$problem_id <- NA
setdiff (names(training),names(testing))
setdiff (names(testing),names(training))
training       <- training[,order(names(training))]
testing        <- testing[,order(names(testing))]
comb <- as.data.frame(rbind(training,testing))
setdiff (names(training),names(testing))
setdiff (names(testing),names(training))
names(testing)
names(training)
which(is.na(training$classe ))
which(is.na(comb$classe ))
training2 <- comb[which(is.na(comb$classe )),]
testing2 <- comb[which(is.na(comb$classe )),]
training2  <- comb[-which(is.na(comb$classe )),]
str(training2)
str(testing2)
str(training2)
write.csv(training2,file="training2.csv")
write.csv(testing2,file="testing2.csv")
View(training2)
View(testing2)
View(testing2)
str(training2)
str(testing2)
rm(candidates32.index)
rm(m)
View(training2)
names(testing2)[1]
names(testing2)[0]
View(testing2)
setdiff (names(training),names(testing))
setdiff (names(testing),names(training))
dataset <- read.csv("~/training2.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
dataset <- read.csv("training2.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
agr <- aggregate(dataset,classe)
agr <- aggregate(dataset,classe,FUN=count)
table <- table(dataset,clasee)
View(dataset)
dataset <- read.csv("pml-training.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
View(dataset)
testing <- read.csv("pml-testing.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
setdiff(names(dataset),names(testing))
setdiff(names(dataset),names(testing))
setdiff(names(testing),names(dataset))
which(names(dataset)==names(testing))
setdiff(names(dataset),names(testing))
setdiff(names(testing),names(dataset))
class(classe)
class(problem_id)
class(dataset$classe)
class(testing$problem_id)
testing.classes       <- as.vector(sapply(testing,class))
training.classes      <- as.vector(sapply(dataset,class))
setdiff(testing.classes, training.classes )
setdiff(testing.classes,  training.classes )
setdiff(training.classes, testing.classes )
which(testing.classes  ==training.classes  )
testing$classes [12:36]
training.classes[12:36]
class(testing.classes)
class(unlist(testing.classes))
dataset <- read.csv("pml-training.csv", na.strings=c(".", "NA", "", "?"),
strip.white=TRUE, colClasses=training.classes)
testing <- read.csv("pml-testing.csv", na.strings=c(".", "NA", "", "?"),
strip.white=TRUE, colClasses=training.classes)
testing <- read.csv("pml-testing.csv", na.strings=c(".", "NA", "", "?"),
strip.white=TRUE, colClasses=unlist(training.classes))
testing <- read.csv("pml-testing.csv", na.strings=c(".", "NA", "", "?"),
strip.white=TRUE, colClasses=as.vector(unlist(training.classes)))
class(testing.classes)
class(dataset$classe)
class(testing$problem_id)
testing <- read.csv("pml-testing.csv", na.strings=c(".", "NA", "", "?"),
strip.white=TRUE, colClasses=c(training.classes[1:159]),"factor"))
testing <- read.csv("pml-testing.csv", na.strings=c(".", "NA", "", "?"),
strip.white=TRUE, colClasses=c(training.classes[1:159],"factor"))
class(training.classes[1:159])
testing <- read.csv("pml-testing.csv",
strip.white=TRUE, colClasses=c(training.classes[1:159],"factor"))
testing <- read.csv("pml-testing.csv",  na.strings='NULL',
strip.white=TRUE, colClasses=c(training.classes[1:159],"factor"))
testing <- read.csv("pml-testing.csv",  na.strings in('NULL',"")
strip.white=TRUE, colClasses=c(training.classes[1:159],"factor"))
testing <- read.csv("pml-testing.csv",  na.strings in('NULL',""),
strip.white=TRUE, colClasses=c(training.classes[1:159],"factor"))
testing <- read.csv("pml-testing.csv",  na.strings in('NULL',""),
colClasses=c(training.classes[1:159],"factor"))
testing <- read.csv("pml-testing.csv",  na.strings in('NULL',""),
colClasses=c(training.classes[1:159],"factor")    )
colClasses=c(training.classes[1:159],"factor")
Classes=c(training.classes[1:159],"factor")
testing <- read.csv("pml-testing.csv",  na.strings in('NULL',""),
colClasses=Classes    )
testing <- read.csv("pml-testing.csv",  na.strings in('NULL',""), colClasses=Classes    )
testing <- read.csv("pml-testing.csv",  na.strings=c(".", "NA", "", "?"), colClasses=Classes    )
testing <- read.csv("pml-testing.csv",  colClasses=Classes    )
testing <- read.csv("pml-testing.csv")
View(testing)
training <- read.csv("pml-training.csv",na.strings=c("#DIV/0!",NA)  )
candidates32.index <- c()
if (   is.factor(training[ ,m])  & nlevels(training[ ,m]) > 32    )
{   candidates32.index <- append(candidates32.index,m)
}
}
for (m in (1 : ncol(training)))   {
if (   is.factor(training[ ,m])  & nlevels(training[ ,m]) > 32    )
{   candidates32.index <- append(candidates32.index,m)
}
}
candidates32.index
candidatesoneunique.index <- c()
for (j in (1 : ncol(training)))   {
if (   length(unique(training[ ,j])) == 1)
candidatesoneunique.index <- append(candidatesoneunique.index,j)
}
candidatesoneunique.index
class(training[,14])
class(training[,candidatesoneunique.index])
candidatesoneunique.index
class(training[,c(14  ,17  ,89  ,92 ,127 ,130)])
testing1 <-testing[1,]
View(testing1)
View(testing1)
write.csv(testing1, file="testing1.csv")
write.csv(testing1, file="testing1.csv")
testing1$classe <- NA
write.csv(testing1, file="testing1.csv")
View(testing1)
dataset <- read.csv("pml-training.csv")
dataset$problem_id <- NA
write.csv(dataset,file="training1.csv")
training <- read.csv("pml-training.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
training <- read.csv("pml-training.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
testing <- read.csv("pml-testing.csv")
library(caret)
modfit.boost <- train(classe ~. ,method="gbm",data=training,verbose=FALSE)
factor1.index <- c()
for (m in (1 : ncol(training)))   {
if (   is.factor(training[ ,m])  & nlevels(training[ ,m]) =1   )
{   factor1.index <- append(factor1.index,m)
}
for (m %in% (1 : ncol(training)))   {
if (   is.factor(training[ ,m])  & nlevels(training[ ,m]) =1   )
{   factor1.index <- append(factor1.index,m)
}
for (m in (1 : ncol(training)))   {
if (   is.factor(training[ ,m])  & nlevels(training[ ,m]) == 1   )
{   factor1.index <- append(factor1.index,m)
}
}
factor1.index
training2 <- training[,-factor1.index]
modfit.boost <- train(classe ~. ,method="gbm",data=training2,verbose=FALSE)
missing.index <- c()
View(training)
View(training)
complete.cases(training)
sum(complete.cases(training))
is.na(training$amplitue-pitch-arm)
is.na(training$amplitue_pitch_arm)
summary(training$amplitue_pitch_arm)
summary(training$amplitue-pitch-arm)
summary(training$amplitude-pitch-arm)
summary(training$amplitude_pitch_arm)
sum(training$amplitude_pitch_arm)
sum(training$amplitude_pitch_arm)
sum(is.na(training$amplitude_pitch_arm))
sum(is.na(training[ ,14]))
missing.index <- c()
for (n in (1 : ncol(training)))   {
if (   sum(is.na(training[ ,n]))=19216   )
{   missing.index <- append(missing.index,n)
}
for (n in (1 : ncol(training)))   {
if (   sum(is.na(training[ ,n])) == 19216   )
{   missing.index <- append(missing.index,n)
}
missing.index
}
missing.index <- c()
for (n in (1 : ncol(training)))   {
if (   sum(is.na(training[ ,n])) == 19216   )
missing.index <- append(missing.index,n)
}
missing.index
training3 <- training2[,-missing.index]
View(training3)
write.csv(training3,file="training3.csv")
summary(training$var_accel_arm)
sum(is.na(training$amplitude_pitch_arm))
summary(training$var_accel_arm)
sum(is.na(training$var_accel_arm))
sum(is.na(training[ ,24]))
training <- read.csv("pml-training.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
testing  <- read.csv("pml-testing.csv")
factor1.index <- c()
for (m in (1 : ncol(training)))   {
if (   is.factor(training[ ,m])  & nlevels(training[ ,m]) == 1   )
{   factor1.index <- append(factor1.index,m)
}
}
training2 <- training[,-factor1.index]
missing.index <- c() #100 variables
for (n in (1 : ncol(training2)))   {
if (   sum(is.na(training2[ ,n])) == 19216   )
missing.index <- append(missing.index,n)
}
missing.index
training3 <- training2[,-missing.index]
write.csv(training3,file="training3.csv")
unique(training[ ,1])
unique(training[ ,1])==1
sum(unique(training[ ,1])==1)
sum(unique(training[ ,2])==1)
View(training3)
ident.index <- c() #94 variables
for (p in (1 : ncol(training3)))   {
if (   sum(unique(training3[ ,p])==1)  )
ident.index <- append(ident.index,p)
}
ident.index
sum(unique(training[ ,7])==1)
sum(unique(training3[ ,1])==1)
sum(unique(training3[ ,7])==1)
unique(training3[ ,1])==1
class(training3[ ,1])
ident.index <- c() #94 variables
for (p in (1 : ncol(training3)))   {
if (   is.integer (training3[ ,p])  &    sum(unique(training3[ ,p])==1)  )
ident.index <- append(ident.index,p)
}
ident.index
names(training1)[1]
names(training3)[1]
names(training3)[7]
sum(unique(training3[ ,7])==1)
names(training3)[7]
summary(training3$num_window)
unique(training3$num_window)
unique(training3$num_window)
View(training3)
ident.index <- c() #94 variables
for (p in (1 : ncol(training3)))   {
if (   is.integer (training3[ ,p])  &    length(unique(training3[ ,p])==1)  )
ident.index <- append(ident.index,p)
}
length(unique(training3$num_window))==1
ident.index <- c() #94 variables
for (p in (1 : ncol(training3)))   {
if (    unique(training3[ ,p])==19622  )
ident.index <- append(ident.index,p)
}
unique(training3[ ,p])==19622
ident.index <- c() #94 variables
ncol(training3)
unique(training3[ ,p])==19622
length(unique(training3$num_window))==1
names(training3)
View(testing)
write.csv(testing3 ,file="testing3.csv")
testing2  <- testing [,-factor1.index]
write.csv(testing3 ,file="testing3.csv")
testing3  <- testing2 [,-missing.index]
write.csv(testing3 ,file="testing3.csv")
View(testing3)
training3$problem_id <- NA
testing3 $classe     <- NA
training3       <- training3[,order(names(training3))]
testing3        <- testing3 [,order(names(testing3))]
write.csv(training3,file="training3.csv")
write.csv(testing3 ,file="testing3.csv")
summary(training3$X1)
summary(training3$X.1)
View(training3)
training <- read.csv("pml-training.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
testing  <- read.csv("pml-testing.csv" na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8"))
testing  <- read.csv("pml-testing.csv" ,na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8"))
testing  <- read.csv("pml-testing.csv" ,na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
View(training)
summary(training&X)
summary(training$X)
summary(training[,1])
indent.index <- 1
training1 <- training[,-indent.index]
factor1.index <- c() # 6 variables
for (m in (1 : ncol(training1)))   {
if (   is.factor(training1[ ,m])  & nlevels(training1[ ,m]) == 1   )
{   factor1.index <- append(factor1.index,m)
}}
training2 <- training1[,-factor1.index]
testing2  <- testing1 [,-factor1.index]
View(testing)
testing1  <- testing [,-indent.index]
missing.index <- c() #94 variables
for (n in (1 : ncol(training2)))   {
if (   sum(is.na(training2[ ,n])) == 19216   )
missing.index <- append(missing.index,n)
}
training3 <- training2[,-missing.index]
testing3  <- testing2 [,-missing.index]
testing2  <- testing1 [,-factor1.index]
training3 <- training2[,-missing.index]
testing3  <- testing2 [,-missing.index]
training3$problem_id <- NA
testing3 $classe     <- NA
training3       <- training3[,order(names(training3))]
testing3        <- testing3 [,order(names(testing3))]
write.csv(training3,file="training3.csv")
write.csv(testing3 ,file="testing3.csv")
View(training3)
View(testing3)
getwd()
summary(training[,1])
names(training)[1]
names(testing)[1]
require(randomForest, quietly=TRUE)
rf <- randomForest(classe ~ .,
data=crs$dataset[crs$sample,c(crs$input, crs$target)],
ntree=500,mtry=7,importance=TRUE,na.action=na.roughfix,replace=FALSE)
nobs     <- nrow(training3) # 19622 observations
sample   <- train <- sample(nrow(training3), 0.7*nobs) # 13735 observations
validate <- sample(setdiff(seq_len(nrow(training3)), train), 0.15*nobs) # 2943 observations
test     <- setdiff(setdiff(seq_len(nrow(training3)), train), validate) # 2944 observations
input <- names(training3)[! names(training3) %in% "classes"]
require(randomForest, quietly=TRUE)
rf <- randomForest(classe ~ .,
data=training3[sample,c(input, target)],
ntree=500,mtry=7,importance=TRUE,na.action=na.roughfix,replace=FALSE)
target <- "classe"
rf <- randomForest(classe ~ .,
data=training3[sample,c(input, target)],
ntree=500,mtry=7,importance=TRUE,na.action=na.roughfix,replace=FALSE)
rf <- randomForest(classe ~ .,
data=training3[sample,c(input, target)],
ntree=500,mtry=7,importance=TRUE,na.action=na.roughfix,replace=FALSE)
rf <- randomForest(classe ~ .,
data=training3[sample,c(input, target)],
ntree=500,mtry=7,importance=TRUE,replace=FALSE)
rf <- randomForest(classe ~ .,
data=training3[sample,c(input, target)],
ntree=500,mtry=7,importance=TRUE,replace=FALSE)
input <- names(training3)[! names(training3) %in% c("classes","problem_id")]
rf <- randomForest(classe ~ .,
data=training3[sample,c(input, target)],
ntree=500,mtry=7,importance=TRUE,replace=FALSE)
pr <- predict(rf, newdata=na.omit(testset[,c(input)]))
pr <- predict(rf, newdata=na.omit(testing3[,c(input)]))
pr <- predict(rf, newdata=na.omit(testing3[,c(input)]))
na.omit(testing3[,c(input)])
pr <- predict(rf, newdata=na.omit(testing3[,c(input)]))
sdata <- subset(testing3[,], select=c("X", "classe"))
sdata <- subset(testing3[,], select=c( "classe"))
pr <- predict(rf, newdata=na.omit(testing3[,c(input)] ) )
pr <- predict(rf, newdata=na.omit(testing3[,c(input)] ) )
newdata <- na.omit(testing3[,c(input)]
newdata <- na.omit(testing3[,c(input)])
newdata <- na.omit(testing3[,c(input)])
pr <- predict(rf, newdata ) )
pr <- predict(rf, newdata )
head (testing3[,c(input)]))
head (testing3[,c(input)] )
na.omit (testing3[,c(input)] )
newdata <- testing3[,c(input)]
pr <- predict(rf, newdata )
testing3 <- read.csv("testing3.csv", na.strings=c(".", "NA", "", "?"), header=TRUE, sep=",", encoding="UTF-8", strip.white=TRUE)
pr <- predict(rf, newdata )
newdata <- na.omit(testing3[,c(input)])
pr <- predict(rf, newdata )
sdata <- subset(testing3[,], select=c( "classe"))
write.csv(cbind(sdata, pr), file="C:\Users\Asus\Documents\testing3_score_idents.csv", row.names=FALSE)
write.csv(cbind(sdata, pr), file="testing3_score_idents.csv", row.names=FALSE)
setdiff(names(training2),names(testing2))
setdiff(names(training2),names(testing2))
setdiff(names(testing2),names(training2))
training3$problem_id <- NA
testing3 $classe     <- NA
training3       <- training3[,order(names(training3))]
testing3        <- testing3 [,order(names(testing3))]
results <- cbind(sdata.svm, pr.svm)
require(kernlab, quietly=TRUE)
ksvm <- ksvm(as.factor(classe) ~ .,
data=training3[training3,c(input, target)],
kernel="rbfdot",
prob.model=TRUE)
